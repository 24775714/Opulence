HAS PRIORITY:
    Add table formatter
    Need to figure out why "sayhello "Lindsey's" does not work
        Is it due to some strange character encoding?
    Need to determine how to allow followup input


    Idea:  Run statement compiler
        Cache results
        Run all other subcompilers
        Cache results
        Next time the template needs to be rendered, look it up in cache
            If it's there, grab it, then check if it is also in cache with the input tags/vars

        ** WOULD NEED TO INHERIT VARS/TAGS/PARTS FROM PARENTS AFTER TEMPLATE IS PARSED
            If we do this inside the Statement subcompiler, we couldn't handle the case when {{username}} was set in a builder for the parent template
                The cached template would always use the inherited tags/vars/parts from the template in cache, which is not at all what we want
            So, we'd need to parse the statements and keep track of the inheritance stack somewhere
                This would also involve running builders AFTER template has been parsed
            Is all this really worth it?
    Add ability to start a section and show it
        Basically, allows us to define a section and give it default content
    Find way to display PHP variables inside tags
    Need to consider whether or not to remove Config from Database classes
        I think this is one place that they might prove useful, but think about it

Need to be able to select DB index for Redis after making connection
    Right now, it's tied to the server object
    So, what gets returned if we connect with a server object, change the DB index, and then request the server object?
Need to add more TypeMapper methods
Need to create session storage classes
    Need to think of how to assign session Ids
    For cache-backed sessions, maybe it's best to have a simple ICache for Redis and Memcached to to implement
        This would only include the basics: get(), set(), and delete()
Do we really need repo interface examples in RDev?
    Is this best left for Project?
Implement at least a basic console kernel
Allow caching of routes/matches
Need to write documentation on Request/Response
Incorrect username entry is faster, allowing timing attacks
Need to figure out where to store lifetime settings for login credentials in LoginController
Need to determine how we hand out api keys