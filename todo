Need to think through MVC
    Login page could use multiple controllers, depending on the action taken
    Do they all extend a common "LoginController", which would setup the view?
    Where does the common-view-setup happen?
Need default controller support in Router
Need a fail-safe method in controllers
Add a class like "ConfigConverter" to make it easy to translate class names to objects in configs
    Would help reduce code duplication
Allow caching of routes/matches
Be able to generatePath() for a router for use in templates
Consider using Configs for controllers
    In the config, you'd specify the repos, credentials to use
Once the above is done, need to finish Login controller
See if there's a way to throw an exception rather than fail completely when IoC container fails to bind/create
    In the long run, it's probably best to just rewrite implementation to not use Dice
Need to write documentation on Request/Response
Need to document Router config
    Need to add grouping support to router config
    Maybe best to start subclassing configs that have multiple config arrays inside them
Need to add support for host in routers
Do we need a Session object?
    Probably, just seems weird after all this because I haven't looked at it in a long time
Incorrect username entry is faster, allowing timing attacks
Cache rendered templates
Convert test pages to views/controllers
Need to figure out where to store lifetime settings for login credentials in LoginController
Need to determine how we hand out api keys