Check if anything is even throwing (No)SQL exceptions anymore
Refactor to get rid of shared, subtree-split databases into new repo, clone into application/
Add user roles to User class
We are passing a sub repo as its interface, which could be a problem because we're relying on it implementing non-interface methods like hashPassword()
    Probably need to re-implement sub-repos as DataMappers
        Issue with this is that we'd still need a wrapper around the DataMappers to do stuff like addDataToRedis()
        Maybe it's worth just keeping all of this in Repository?
Need to write some interfaces around LoginCredentials and its factory to generalize them
    This will make classes like LoginController and Session able to work with different types of credentials
See if current Session class would make more sense as an abstract class
    Also need to add methods for setting things like cookies/JSON response for credentials
    Need to pass a reference to this object to LoginController
Need to figure out where to store lifetime settings for login credentials in LoginController
Get rid of "deactivate()" methods because they aren't a good fit for repository pattern
Write tests for Router class
Need to build classes to store credentials client-side (eg cookies/JSON)
    Where should these classes be instantiated/used?
Need to build classes that instantiate our repos/factories
Really need to take a look at DBUnit for this stuff because this is only going to get harder and harder to write tests for
Need to determine how we hand out api keys